okb_north = sum(okb.nord),
okb_south = sum(okb.sued)) %>%
unique()
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% where(month_id = 6) %>%
ggplot(aes(x = date,
y = deich_ost_strom_up_sum)) +
geom_line(size = 0.5,
color = "blue") +
geom_line(aes(y = deich_west_strom_down_sum),
size = 0.5,
color = "red") +
geom_line(size = 0.5,
aes(y = okb_north),
color= "green") +
geom_line(size = 0.5,
color = "orange",
aes(y = okb_south))
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% where(month_id == 6) %>%
ggplot(aes(x = date,
y = deich_ost_strom_up_sum)) +
geom_line(size = 0.5,
color = "blue") +
geom_line(aes(y = deich_west_strom_down_sum),
size = 0.5,
color = "red") +
geom_line(size = 0.5,
aes(y = okb_north),
color= "green") +
geom_line(size = 0.5,
color = "orange",
aes(y = okb_south))
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% where(month_id == 6) %>%
ggplot(aes(x = date,
y = deich_ost_strom_up_sum)) +
geom_line(size = 0.5,
color = "blue") +
geom_line(aes(y = deich_west_strom_down_sum),
size = 0.5,
color = "red") +
geom_line(size = 0.5,
aes(y = okb_north),
color= "green") +
geom_line(size = 0.5,
color = "orange",
aes(y = okb_south))
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% where(cycling_data$month_id == 6) %>%
ggplot(aes(x = date,
y = deich_ost_strom_up_sum)) +
geom_line(size = 0.5,
color = "blue") +
geom_line(aes(y = deich_west_strom_down_sum),
size = 0.5,
color = "red") +
geom_line(size = 0.5,
aes(y = okb_north),
color= "green") +
geom_line(size = 0.5,
color = "orange",
aes(y = okb_south))
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% filter(month_id == 6) %>%
ggplot(aes(x = date,
y = deich_ost_strom_up_sum)) +
geom_line(size = 0.5,
color = "blue") +
geom_line(aes(y = deich_west_strom_down_sum),
size = 0.5,
color = "red") +
geom_line(size = 0.5,
aes(y = okb_north),
color= "green") +
geom_line(size = 0.5,
color = "orange",
aes(y = okb_south))
rep(c(0,1,1,0,0,0,0,0), 10)
rep(c(0,1,1,0,0,0,0),52)
c(rep(c(0,1,1,0,0,0,0),52),0)
length(c(rep(c(0,1,1,0,0,0,0),52),0))
cycling_data <- read.csv2("./Data/cyclist_counts.csv")
location_data <- read.csv2("./Data/locations_of_count.csv")
# preprocessing ...
cycling_data$date <- as.Date(cycling_data$date, tryFormats = c("%d.%m.%Y"))
cycling_data$month_id <- as.numeric(format(cycling_data$date, "%m"))
# adding weekend dummy variable, by repeating the first 7 days 52 times and
# adding the last day by hand
cycling_data&weekend_yes_no <- c(rep(c(0,1,1,0,0,0,0),52),0)
number_to_month <- data.frame(id = c(1,2,3,4,5,6,7,8,9,10,11,12),
month_spelled_out = c("Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"))
cycling_data <- cycling_data %>%
inner_join(number_to_month, by = c("month_id" = "id"))
# how many cyclists per day
daily_cycling_data <- cycling_data %>%
group_by(date) %>%
reframe(date=date,
month_id = month_id,
deich_ost_strom_up_sum = sum(fleher.deich.ost.stromaufwaerts),
deich_west_strom_down_sum = sum(fleher.deich.west.stromabwaerts),
okb_north = sum(okb.nord),
okb_south = sum(okb.sued)) %>%
unique()
# first build a repeatable dataset
help_data <- data.frame()
# first build a repeatable dataset
help_data <- data.frame()
# correcting data-type of column "date"
help_data$date <- as.Date(cycling_data$date, tryFormats = c("%d.%m.%Y"))
# adding weekend dummy variable, by repeating the first 7 days 52 times and
# adding the last day by hand
help_data&weekend_yes_no <- c(rep(c(0,1,1,0,0,0,0),52),0)
h
# correcting data-type of column "date"
help_data$date <- as.Date(cycling_data$date, tryFormats = c("%d.%m.%Y"))
# first build a repeatable dataset
help_data <- data.frame(id = 1:length(cycling_data$date))
# correcting data-type of column "date"
help_data$date <- as.Date(cycling_data$date, tryFormats = c("%d.%m.%Y"))
# adding weekend dummy variable, by repeating the first 7 days 52 times and
# adding the last day by hand
help_data$weekend_yes_no <- c(rep(c(0,1,1,0,0,0,0),52),0)
# adding the month spelled out by an inner join
help_data$month_id <- as.numeric(format(cycling_data$date, "%m"))
number_to_month <- data.frame(id = c(1,2,3,4,5,6,7,8,9,10,11,12),
month_spelled_out = c("Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"))
help_data <- help_data %>%
inner_join(number_to_month, by = c("month_id" = "id"))
# first build a repeatable dataset
raw_data <- data.frame(id = 1:4*length(cycling_data$date))
rm(ls())
rm(list=ls())
cycling_data <- read.csv2("./Data/cyclist_counts.csv")
location_data <- read.csv2("./Data/locations_of_count.csv")
# first build a repeatable dataset
raw_data <- data.frame(id = 1:4*length(cycling_data$date))
# first build a repeatable dataset
raw_data <- data.frame(id = 1:(4*length(cycling_data$date)))
# correcting data-type of column "date"
help_data$date <- rep(as.Date(cycling_data$date, tryFormats = c("%d.%m.%Y")), 4)
# correcting data-type of column "date"
raw_data$date <- rep(as.Date(cycling_data$date, tryFormats = c("%d.%m.%Y")), 4)
# adding weekend dummy variable, by repeating the first 7 days 52 times and
# adding the last day by hand
raw_data$weekend_yes_no <- rep(c(rep(c(0,1,1,0,0,0,0),52),0), 4)
# adding the month spelled out by an inner join
raw_data$month_id <- rep(as.numeric(format(cycling_data$date, "%m")), 4)
# adding the month spelled out by an inner join
raw_data$month_id <- rep(as.numeric(format(cycling_data$date, "%m")), 4)
as.numeric(format(cycling_data$date, "%m"))
format(cycling_data$date, "%m")
cycling_data$date = as.Date(cycling_data$date, tryFormats = c("%d.%m.%Y"))
# correcting data-type of column "date"
raw_data$date <- rep(cycling_data$date, 4)
# adding weekend dummy variable, by repeating the first 7 days 52 times and
# adding the last day by hand
raw_data$weekend_yes_no <- rep(c(rep(c(0,1,1,0,0,0,0),52),0), 4)
# adding the month spelled out by an inner join
raw_data$month_id <- rep(as.numeric(format(cycling_data$date, "%m")), 4)
number_to_month <- data.frame(id = c(1,2,3,4,5,6,7,8,9,10,11,12),
month_spelled_out = c("Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"))
help_data <- help_data %>%
inner_join(number_to_month, by = c("month_id" = "id"))
raw_data <- raw_data %>%
inner_join(number_to_month, by = c("month_id" = "id"))
## Data processing #############################################################
# ------------------ keymetrics ------------------------------------------------
n <- length(cycling_data)
## Data processing #############################################################
# ------------------ keymetrics ------------------------------------------------
n <- length(cycling_data$date)
n
# first build a repeatable dataset
raw_data <- data.frame(id = 1:(4*n))
# correcting data-type of column "date"
raw_data$date <- rep(cycling_data$date, 4)
# adding weekend dummy variable, by repeating the first 7 days 52 times and
# adding the last day by hand
raw_data$weekend_yes_no <- rep(c(rep(c(0,1,1,0,0,0,0),52),0), 4)
# adding the month spelled out by an inner join
raw_data$month_id <- rep(as.numeric(format(cycling_data$date, "%m")), 4)
number_to_month <- data.frame(id = c(1,2,3,4,5,6,7,8,9,10,11,12),
month_spelled_out = c("Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"))
raw_data <- raw_data %>%
inner_join(number_to_month, by = c("month_id" = "id"))
raw_data&counting_station <- c(rep("Fleher Deich ost stromaufwärts", n),
rep("Fleher Deich west stromabwärts", n),
rep("OKB Nord", n),
rep("OKB Süd", n))
# adding values from counting stastions
raw_data$cycling_count <- c(cycling_data$fleher.deich.ost.stromaufwaerts,
cycling_data$fleher.deich.west.stromabwaerts,
cycling_data$okb.nord,
cycling_data$okb.sued)
raw_data$counting_station <- c(rep("Fleher Deich ost stromaufwärts", n),
rep("Fleher Deich west stromabwärts", n),
rep("OKB Nord", n),
rep("OKB Süd", n))
View(raw_data)
View(raw_data)
raw_data$counting_station <- as.factor(raw_data$counting_station)
# how many cyclists per day
daily_cycling_data <- raw_data %>%
group_by(date, counting_station) %>%
reframe(date=date,
month_id = month_id,
weekend_yes_no = weekend_yes_no,
cycling_count = sum(cycling_count)) %>%
unique()
View(daily_cycling_data)
View(daily_cycling_data)
View(raw_data)
View(raw_data)
rep(cycling_data$date, 4)
View(cycling_data)
View(cycling_data)
rep(
c(
rep(
c(rep(0, 92),
rep(1, 92),
rep(1, 92),
rep(0, 92),
rep(0, 92),
rep(0, 92),
rep(0, 92))
,52),
rep(0, 96)
),
4)
rep(
c(
rep(
c(rep(0, 96),
rep(1, 96),
rep(1, 96),
rep(0, 96),
rep(0, 96),
rep(0, 96),
rep(0, 96))
,52),
rep(0, 96)
),
4)
# ------------------ preprocessing ---------------------------------------------
# correcting false datatypes
cycling_data$date = as.Date(cycling_data$date, tryFormats = c("%d.%m.%Y"))
# building data set from scratch
raw_data <- data.frame(id = 1:(4*n))
# adding the date
raw_data$date <- rep(cycling_data$date, 4)
# adding weekend dummy variable, by repeating the first 7 days 52 times
# with regard to 96 time intervals per day and
# adding the last day by hand
raw_data$weekend_yes_no <- rep(
c(
rep(
c(rep(0, 96),
rep(1, 96),
rep(1, 96),
rep(0, 96),
rep(0, 96),
rep(0, 96),
rep(0, 96))
,52),
rep(0, 96)
),
4)
# adding the month spelled out by an inner join
raw_data$month_id <- rep(as.numeric(format(cycling_data$date, "%m")), 4)
number_to_month <- data.frame(id = c(1,2,3,4,5,6,7,8,9,10,11,12),
month_spelled_out = c("Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"))
raw_data <- raw_data %>%
inner_join(number_to_month, by = c("month_id" = "id"))
# adding values from counting stastions
raw_data$cycling_count <- c(cycling_data$fleher.deich.ost.stromaufwaerts,
cycling_data$fleher.deich.west.stromabwaerts,
cycling_data$okb.nord,
cycling_data$okb.sued)
raw_data$counting_station <- c(rep("Fleher Deich ost stromaufwärts", n),
rep("Fleher Deich west stromabwärts", n),
rep("OKB Nord", n),
rep("OKB Süd", n))
raw_data$counting_station <- as.factor(raw_data$counting_station)
# how many cyclists per day
daily_cycling_data <- raw_data %>%
group_by(date, counting_station) %>%
reframe(date=date,
month_id = month_id,
weekend_yes_no = weekend_yes_no,
cycling_count = sum(cycling_count)) %>%
unique()
View(daily_cycling_data)
monthly_cycling_data <- cycling_data %>%
group_by(month_id, counting_station) %>%
reframe(month_id = month_id,
month_spelled_out = month_spelled_out,
cycling_count = sum(cycling_count)) %>%
unique()
monthly_cycling_data <- raw_data %>%
group_by(month_id, counting_station) %>%
reframe(month_id = month_id,
month_spelled_out = month_spelled_out,
cycling_count = sum(cycling_count)) %>%
unique()
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% ggplot(aes(x = date,
y = cycling_count,
group = counting_station,
color = counting_station)) +
geom_line()
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% ggplot(aes(x = date,
y = cycling_count,
group = counting_station,
color = counting_station)) +
geom_area()
alpha = counting_station) +
geom_area()
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% ggplot(aes(x = date,
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% ggplot(aes(x = date,
y = cycling_count,
group = counting_station,
color = counting_station,
alpha = counting_station)) +
geom_area()
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% ggplot(aes(x = date,
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% ggplot(aes(x = date,
y = cycling_count,
group = counting_station,
color = counting_station,
alpha = counting_station)) +
geom_area()
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% filter(month_id == 6) %>%
ggplot(aes(x = date,
y = cycling_count,
group = counting_station,
color = counting_station,
alpha = counting_station)) +
geom_area()
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% filter(month_id == 6) %>%
ggplot(aes(x = date,
y = cycling_count,
group = counting_station,
color = counting_station)) +
geom_area()
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% filter(month_id == 6) %>%
ggplot(aes(x = date,
y = cycling_count,
group = counting_station,
color = counting_station,
alpha = counting_station)) +
geom_area()
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% filter(month_id == 7) %>%
ggplot(aes(x = date,
y = cycling_count,
group = counting_station,
color = counting_station,
alpha = counting_station)) +
geom_area()
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% filter(month_id == 1) %>%
ggplot(aes(x = date,
y = cycling_count,
group = counting_station,
color = counting_station,
alpha = counting_station)) +
geom_area()
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% filter(month_id == 2) %>%
ggplot(aes(x = date,
y = cycling_count,
group = counting_station,
color = counting_station,
alpha = counting_station)) +
geom_area()
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% filter(month_id == 3) %>%
ggplot(aes(x = date,
y = cycling_count,
group = counting_station,
color = counting_station,
alpha = counting_station)) +
geom_area()
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% filter(month_id == 4) %>%
ggplot(aes(x = date,
y = cycling_count,
group = counting_station,
color = counting_station,
alpha = counting_station)) +
geom_area()
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% filter(month_id == 4) %>%
ggplot(aes(x = date,
y = cycling_count,
group = counting_station,
color = counting_station,
alpha = counting_station)) +
geom_line()
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% filter(month_id == 4) %>%
ggplot(aes(x = date,
y = cycling_count,
group = counting_station,
color = counting_station,
alpha = counting_station)) +
geom_line(size = 1)
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% filter(month_id == 4) %>%
ggplot(aes(x = date,
y = cycling_count,
group = counting_station,
color = counting_station)) +
geom_line(size = 1)
monthly_cycling_data %>%
ggplot(aes(x = counting_station,
y = cycling_count,
color = counting_station)) +
geom_bar()
monthly_cycling_data %>%
ggplot(aes(y = cycling_count,
color = counting_station)) +
geom_bar()
monthly_cycling_data %>%
ggplot(aes(x = cycling_count,
color = counting_station)) +
geom_bar()
monthly_cycling_data %>%
ggplot(aes(x = counting_station,
y = cycling_count,
color = counting_station)) +
geom_bar(stat = "identity")
monthly_cycling_data %>%
ggplot(aes(x = month_spelled_out,
y = cycling_count,
fill = counting_station)) +
geom_bar(stat = "identity")
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% filter(month_id == 3) %>%
ggplot(aes(x = date,
y = cycling_count,
group = counting_station,
color = counting_station)) +
geom_line(size = 1)
## Data cleaning ###############################################################
# checking for NA values
length(cycling_data$fleher.deich.ost.stromaufwaerts[cycling_data$fleher.deich.ost.stromaufwaerts == NA])
## Data cleaning ###############################################################
# checking for NA values
length(is.na(cycling_data$fleher.deich.ost.stromaufwaerts)
## Data cleaning ###############################################################
# checking for NA values
length(is.na(cycling_data$fleher.deich.ost.stromaufwaerts))
## Data processing #############################################################
# ------------------ keymetrics ------------------------------------------------
n <- length(cycling_data$date)
is.na(c(1,2,NA))
## Data cleaning ###############################################################
# checking for NA values
sum(is.na(cycling_data$fleher.deich.ost.stromaufwaerts))
# 4 NA Values
sum(is.nan(cycling_data$fleher.deich.ost.stromaufwaerts))
# 4 NA Values
sum(is.na(cycling_data$fleher.deich.west.stromabwaerts))
sum(is.na(cycling_data$okb.sued))
# 4 NA Values
sum(is.na(cycling_data$okb.sued))
sum(na_d_o)
na_d_o <- is.na(cycling_data$fleher.deich.ost.stromaufwaerts)
na_d_w <- is.na(cycling_data$fleher.deich.west.stromabwaerts)
na_okb_n <- is.na(cycling_data$okb.nord)
na_okb_s <- is.na(cycling_data$okb.sued)
sum(na_d_o)
# 4 NA Values
sum(na_d_w)
# 4 NA Values
sum(na_okb_n)
# 4 NA Values
sum(na_okb_s)
cycling_data[,na_d_o]
cycling_data[na_d_o,]
cycling_data[na_d_o,]
cycling_data[na_d_w,]
cycling_data[na_okb_n,]
cycling_data[na_okb_s]
cycling_data[na_okb_s,]
mean(c(0,1,NA))
length(c(NA,NA))
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% filter(month_id == 3) %>%
ggplot(aes(x = date,
y = cycling_count,
group = counting_station,
color = counting_station)) +
geom_line(size = 1)
# plotting the daily cycling data (still work in progress)
daily_cycling_data %>% filter(month_id == 6) %>%
ggplot(aes(x = date,
y = cycling_count,
group = counting_station,
color = counting_station)) +
geom_line(size = 1)
